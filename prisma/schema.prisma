datasource database {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../db"
}

enum GenderType {
  female
  male
  other
}

enum OauthType {
  kakao
  naver
}

model AccessorModel {
  id               String              @id
  oauth_sub        String
  oauth_type       OauthType
  customer_id      String?
  business_user_id String?
  customer         CustomerModel?      @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  business_user    BusinessUserModel?  @relation(fields: [business_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  temp_re_agents   TempREAgentModel?
  temp_hs_company  TempHSCompanyModel?

  @@unique([oauth_type, oauth_sub])
  @@map("oauth_accessors")
}

model UserModel {
  created_at     DateTime           @database.Timestamptz
  id             String             @id
  name           String
  phone          String
  phone_verified Boolean
  email          String?
  email_verified Boolean
  customer       CustomerModel?
  business_user  BusinessUserModel?

  @@map("users")
}

model CustomerModel {
  id                String          @id
  profile_image_url String?
  gender            GenderType?
  birth             String?
  address_first     String?
  address_second    String?
  base              UserModel       @relation(fields: [id], references: [id], onUpdate: NoAction, onDelete: NoAction)
  oauth_accessors   AccessorModel[]

  @@map("customers")
}

model BusinessUserModel {
  id                   String          @id
  profile_image_url    String
  introduction_title   String
  introduction_content String
  base                 UserModel       @relation(fields: [id], references: [id], onUpdate: NoAction, onDelete: NoAction)
  re_agent             REAgentModel?
  hs_company           HSCompanyModel?
  oauth_accessors      AccessorModel[]

  @@map("business_users")
}

model REAgentModel {
  id                     String            @id
  is_licensed            Boolean
  re_num                 String
  re_name                String
  re_phone               String
  re_licensed_agent_name String
  re_address_first       String
  re_address_second      String?
  base                   BusinessUserModel @relation(fields: [id], references: [id], onUpdate: NoAction, onDelete: NoAction)

  @@map("re_agents")
}

model HSCompanyModel {
  id                  String                            @id
  business_num        String
  address_first       String
  address_second      String?
  base                BusinessUserModel                 @relation(fields: [id], references: [id], onUpdate: NoAction, onDelete: NoAction)
  introduction_images HSCompanyIntroductionImageModel[]

  @@map("hs_companies")
}

model HSCompanyIntroductionImageModel {
  id         String         @id
  url        String
  company_id String
  company    HSCompanyModel @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("hs_company_introduction_images")
}

model TempREAgentModel {
  id                     String        @id
  name                   String?
  email                  String?
  email_verified         Boolean
  phone                  String?
  phone_verified         Boolean
  profile_image_url      String?
  address_first          String?
  address_second         String?
  introduction_title     String?
  introduction_content   String?
  is_licensed            Boolean?
  re_num                 String?
  re_name                String?
  re_phone               String?
  re_licensed_agent_name String?
  oauth_accessor         AccessorModel @relation(fields: [id], references: [id], onUpdate: NoAction, onDelete: NoAction)

  @@map("temp_re_agents")
}

model TempHSCompanyModel {
  id                   String        @id
  name                 String?
  email                String?
  email_verified       Boolean
  phone                String?
  phone_verified       Boolean
  profile_image_url    String?
  address_first        String?
  address_second       String?
  introduction_title   String?
  introduction_content String?
  business_num         String?
  oauth_accessor       AccessorModel @relation(fields: [id], references: [id], onUpdate: NoAction, onDelete: NoAction)

  @@map("temp_hs_companies")
}
