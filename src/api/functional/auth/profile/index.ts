/**
 * @packageDocumentation
 * @module api.functional.auth.profile
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import { Fetcher } from "@nestia/fetcher";
import type { IConnection } from "@nestia/fetcher";

import type { Authentication } from "./../../../structures/auth/auth.interface";

/**
 * 새로운 회원 정보를 생성할 때, 입력창 기본값을 채우기 위해 사용한다.
 * 
 * @summary OauthProfile 요청 API
 * @tag authentication
 * @returns OauthProfile
 * @throw 401 Unauthorized
 * @throw 403 Forbidden
 * 
 * @controller AuthenticationController.getProfile()
 * @path GET /auth/profile
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export function getProfile
    (
        connection: IConnection
    ): Promise<getProfile.Output>
{
    return Fetcher.fetch
    (
        connection,
        getProfile.ENCRYPTED,
        getProfile.METHOD,
        getProfile.path()
    );
}
export namespace getProfile
{
    export type Output = Authentication.IOauthProfile;

    export const METHOD = "GET" as const;
    export const PATH: string = "/auth/profile";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export function path(): string
    {
        return `/auth/profile`;
    }
}