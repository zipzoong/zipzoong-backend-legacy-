/**
 * @packageDocumentation
 * @module api.functional.auth.token.refresh
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import { Fetcher } from "@nestia/fetcher";
import type { IConnection } from "@nestia/fetcher";
import typia from "typia";

import type { IAuthentication } from "./../../../../structures/authentication";

/**
 * @summary token refresh
 * @tag authentication
 * @return access_token
 * @throw 401 Unauthorized
 * @throw 403 Forbidden
 * 
 * @controller TokenRefreshController.execute()
 * @path POST /auth/token/refresh
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export function execute
    (
        connection: IConnection
    ): Promise<execute.Output>
{
    return Fetcher.fetch
    (
        connection,
        execute.ENCRYPTED,
        execute.METHOD,
        execute.path()
    );
}
export namespace execute
{
    export type Output = IAuthentication.IAccessToken;

    export const METHOD = "POST" as const;
    export const PATH: string = "/auth/token/refresh";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export function path(): string
    {
        return `/auth/token/refresh`;
    }
}